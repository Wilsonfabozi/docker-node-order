version: "3.9"

services:
  nodejs:
    build:
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USERNAME=$POSTGRES_USERNAME
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB

      - MONGO_PORT=$MONGO_PORT
      - MONGO_URL=$MONGO_URL
      - MONGO_DB=$MONGO_DB
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
    ports:
      - "80:8080"
    volumes:
      - .:/app
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    env_file: .env
    environment:
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_USERNAME
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_PASSWORD
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - app-network

  db_postgres:
    image: postgres
    container_name: db_postgres
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=$POSTGRES_USERNAME
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    # volumes:
    #   - db_postgres:/data/postgres/
    ports:
      - 5432:5432
    networks:
      - app-network

  db_mongo:
    image: mongo
    container_name: db_mongo
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    # volumes:
    #   - db_mongo:/data/mongo/
    ports:
      - 27017:27017
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   db_postgres:
#   db_mongo:

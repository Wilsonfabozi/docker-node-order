version: "3.9"

services:
  nodejs:
    build: 
      context: .
      dockerfile: Dockerfile
    image: nodejs
    container_name: nodejs
    # restart: unless-stopped
    env_file: .env
    environment:
      # - POSTGRES_USERNAME=$POSTGRES_USERNAME
      # - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      # - MONGO_HOSTNAME=db
      # - POSTGRES_PORT=$POSTGRES_PORT
      # - POSTGRES_DB=$POSTGRES_DB 

      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB 
    ports:
      - "80:8080"
    volumes:
      - ./:/home/node/app
    #   - node_modules:/home/node/app/node_modules
    networks:
      - app-network 

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    container_name: 'rabbitmq'
    # restart: always
    environment:
      - "RABBITMQ_DEFAULT_PASS=password"
      - "RABBITMQ_DEFAULT_USER=username"
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - app-network

      
  # db_postgres:
  #   image: postgresql
  #   container_name: db_postgres
  #   # restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
  #     - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
  #   volumes:  
  #     - databases:/data/postgres/ 
  #   networks:
  #     - app-network 

  db_mongo:
    image: mongo
    container_name: db_mongo
    # restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:  
      - db_mongo:/data/mongo/
    networks:
      - app-network 

networks:
  app-network:
    driver: bridge

volumes:
  # db_postgres:
  db_mongo:
